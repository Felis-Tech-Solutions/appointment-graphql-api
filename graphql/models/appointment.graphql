type Appointment {
    id: ID
    title: String
    description: String
    startDateTime: DateTime! @rename(attribute: "start_date_time")
    endDateTime: DateTime! @rename(attribute: "end_date_time")
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
    user: User! @belongsTo
    attendees: [User!]! @belongsToMany
}

extend type Query {
    appointment(
        id:      ID      @eq @rules(apply: ["prohibits:title", "required_without:title"])
        title:   String  @eq @rules(apply: ["prohibits:id", "required_without:id"])
    ): Appointment @find

    appointments(
        id:             [ID!] @in(key: "id")     @rules(apply: ["prohibits:title"])
        title:          String @in(key: "title") @rules(apply: ["prohibits:id"])
        startDateTime:  DateTime @rename(attribute: "start_date_time")
        endDateTime:    DateTime @rename(attribute: "end_date_time")
        userId:         ID @eq(key: "user_id")   @rules(apply: ["prohibits:id,title"])
        attendeeId:     ID                       @rules(apply: ["prohibits:id,title"])
        orderBy:        _       @orderBy(columns: ["id", "title", "start_date_time", "end_date_time", "created_at", "updated_at"])
    ): [Appointment!]! @paginate

    allAppointments: [Appointment!]! @all

}

extend type Mutation {
    createAppointment(input: AppointmentCreateInput! @spread): Appointment @create
    updateAppointment(input: AppointmentUpdateInput! @spread): Appointment @update
    deleteAppointment(id: ID! @whereKey): Appointment @delete
}

input AppointmentCreateInput @validator {
    title:         String
    description:   String
    startDateTime: DateTime! @rename(attribute: "start_date_time")
    endDateTime:   DateTime! @rename(attribute: "end_date_time")
    user:          CreateUserBelongsTo!
    attendees:     CreateUserBelongsToManyInput
}

input AppointmentUpdateInput @validator {
    id:           ID!
    title:        String
    description:  String
    startDateTime: DateTime @rename(attribute: "start_date_time")
    endDateTime:   DateTime @rename(attribute: "end_date_time")
    user:         UpdateUserBelongsTo
    attendees:    UpdateUserBelongsToManyInput
}

input CreateAppointmentBelongsToManyInput {
    connect:                [ID!]
    sync:                   [ID!]
    syncWithoutDetaching:   [ID!]
    disconnect:             [ID!]
}

input UpdateAppointmentBelongsToManyInput {
    connect:                [ID!]
    sync:                   [ID!]
    syncWithoutDetaching:   [ID!]
    disconnect:             [ID!]
}




